name: CI-CD

on: [push]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install libncurses for roadrunner
      run: sudo apt-get install -y libncurses5 libncurses5:i386
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install tox tox-gh-actions
    - name: Test with tox
      run:
        tox -- --cov-report=xml
    - name: Report coverage
      shell: bash
      run: bash <(curl -s https://codecov.io/bash)

  release:
    needs: tests
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get tag
      id: tag
      run: echo "::set-output name=version::${GITHUB_REF#refs/tags/}"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install twine
    - name: Build package
      run: python setup.py sdist bdist_wheel
    - name: Check the package
      run: twine check dist/*
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run:
        twine upload --skip-existing --non-interactive dist/*
    - name: Create GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body_path: "release-notes/${{ steps.tag.outputs.version }}.md"
        draft: false
        prerelease: false
    - name: Send release tweet
      uses: ethomson/send-tweet-action@v1
      with:
        status: "New ${{ github.event.repository.name }} release ${{ steps.tag.outputs.version }}! https://github.com/matthiaskoenig/sbmlutils/releases/tag/${{ steps.tag.outputs.version }} #python #SBML #release"
        consumer-key: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
        consumer-secret: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
        access-token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        access-token-secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
